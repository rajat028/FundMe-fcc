{
  "address": "0x17468420DeacaF2a7694ceA35d509f8B90E88aa7",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x8b6bacdc346f1ddef3f993ceae93a635421ca57005e5123737951227084fc7b4",
  "receipt": {
    "to": null,
    "from": "0x1A8E23346ED0B1bBfD36BA672AaAf0A431b0fC0B",
    "contractAddress": "0x17468420DeacaF2a7694ceA35d509f8B90E88aa7",
    "transactionIndex": 17,
    "gasUsed": "903874",
    "logsBloom": "0x
    "blockHash": "0x62e9e2063c776022c2571abdf06fedc70841327f5acf5cb9910ea0eca88f48eb",
    "transactionHash": "0x8b6bacdc346f1ddef3f993ceae93a635421ca57005e5123737951227084fc7b4",
    "logs": [],
    "blockNumber": 3134741,
    "cumulativeGasUsed": "2248960",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "f5badf95af21017913dae70a1115cfb6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    AggregatorV3Interface public priceFeed;\\n    \\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n    function getVersion() public view returns (uint256){\\n        // ETH/USD price feed address of Sepolia Network.\\n        AggregatorV3Interface priceFeedLocal = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\\n        return priceFeedLocal.version();\\n    }\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\",\"keccak256\":\"0x450e764d455ffc5b0f2a363cd80b303bcb17c909766d4b23c7ebda16f9ee38d9\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        // Sepolia ETH / USD Address\\n        // https://docs.chain.link/data-feeds/price-feeds/addresses#Sepolia%20Testnet\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0x350714a2ea6cc3b12aa690a0697df5d82a2986d90291c123c61e99a808c0a356\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405162000fe838038062000fe88339818101604052810190610034919061011f565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ec826100c1565b9050919050565b6100fc816100e1565b811461010757600080fd5b50565b600081519050610119816100f3565b92915050565b600060208284031215610135576101346100bc565b5b60006101438482850161010a565b91505092915050565b610e8c806200015c6000396000f3fe60806040526004361061007f5760003560e01c8063741bef1a1161004e578063741bef1a14610142578063b60d42881461016d578063dba6335f14610177578063dc0d3dff146101a25761008e565b80630d8e6e2c146100985780633ccfd60b146100c35780633e47d6f3146100da5780636b69a592146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610319565b6040516100ba9190610827565b60405180910390f35b3480156100cf57600080fd5b506100d86103a8565b005b3480156100e657600080fd5b5061010160048036038101906100fc91906108a5565b6105ea565b60405161010e9190610827565b60405180910390f35b34801561012357600080fd5b5061012c610602565b6040516101399190610827565b60405180910390f35b34801561014e57600080fd5b5061015761060f565b6040516101649190610931565b60405180910390f35b6101756101df565b005b34801561018357600080fd5b5061018c610635565b604051610199919061095b565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c491906109a2565b61065b565b6040516101d6919061095b565b60405180910390f35b6802b5e3af16b188000061021e600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461069a90919063ffffffff16565b101561025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610a2c565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ad9190610a7b565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008073694aa1769357215de4fac081bf1f309adc32530690508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa15801561037e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a29190610ac4565b91505090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461042f576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104da5760006001828154811061045557610454610af1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104d290610b20565b915050610432565b50600067ffffffffffffffff8111156104f6576104f5610b68565b5b6040519080825280602002602001820160405280156105245781602001602082028036833780820191505090505b506001908051906020019061053a929190610767565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161056190610bc8565b60006040518083038185875af1925050503d806000811461059e576040519150601f19603f3d011682016040523d82523d6000602084013e6105a3565b606091505b50509050806105e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105de90610c29565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061066b57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106a6836106d6565b90506000670de0b6b3a764000085836106bf9190610c49565b6106c99190610cba565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610724573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107489190610d63565b5050509150506402540be4008161075f9190610dde565b915050919050565b8280548282559060005260206000209081019282156107e0579160200282015b828111156107df5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610787565b5b5090506107ed91906107f1565b5090565b5b8082111561080a5760008160009055506001016107f2565b5090565b6000819050919050565b6108218161080e565b82525050565b600060208201905061083c6000830184610818565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061087282610847565b9050919050565b61088281610867565b811461088d57600080fd5b50565b60008135905061089f81610879565b92915050565b6000602082840312156108bb576108ba610842565b5b60006108c984828501610890565b91505092915050565b6000819050919050565b60006108f76108f26108ed84610847565b6108d2565b610847565b9050919050565b6000610909826108dc565b9050919050565b600061091b826108fe565b9050919050565b61092b81610910565b82525050565b60006020820190506109466000830184610922565b92915050565b61095581610867565b82525050565b6000602082019050610970600083018461094c565b92915050565b61097f8161080e565b811461098a57600080fd5b50565b60008135905061099c81610976565b92915050565b6000602082840312156109b8576109b7610842565b5b60006109c68482850161098d565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a16601b836109cf565b9150610a21826109e0565b602082019050919050565b60006020820190508181036000830152610a4581610a09565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a868261080e565b9150610a918361080e565b9250828201905080821115610aa957610aa8610a4c565b5b92915050565b600081519050610abe81610976565b92915050565b600060208284031215610ada57610ad9610842565b5b6000610ae884828501610aaf565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b2b8261080e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610b5d57610b5c610a4c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610bb2600083610b97565b9150610bbd82610ba2565b600082019050919050565b6000610bd382610ba5565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c13600b836109cf565b9150610c1e82610bdd565b602082019050919050565b60006020820190508181036000830152610c4281610c06565b9050919050565b6000610c548261080e565b9150610c5f8361080e565b9250828202610c6d8161080e565b91508282048414831517610c8457610c83610a4c565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cc58261080e565b9150610cd08361080e565b925082610ce057610cdf610c8b565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d0a81610ceb565b8114610d1557600080fd5b50565b600081519050610d2781610d01565b92915050565b6000819050919050565b610d4081610d2d565b8114610d4b57600080fd5b50565b600081519050610d5d81610d37565b92915050565b600080600080600060a08688031215610d7f57610d7e610842565b5b6000610d8d88828901610d18565b9550506020610d9e88828901610d4e565b9450506040610daf88828901610aaf565b9350506060610dc088828901610aaf565b9250506080610dd188828901610d18565b9150509295509295909350565b6000610de982610d2d565b9150610df483610d2d565b9250828202610e0281610d2d565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610e3a57610e39610a4c565b5b8282058414831517610e4f57610e4e610a4c565b5b509291505056fea264697066735822122051ee747a916e827437b3c9ed39e7fd7fa6d0697984400f6c1123b9ecbc60c29864736f6c63430008120033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063741bef1a1161004e578063741bef1a14610142578063b60d42881461016d578063dba6335f14610177578063dc0d3dff146101a25761008e565b80630d8e6e2c146100985780633ccfd60b146100c35780633e47d6f3146100da5780636b69a592146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610319565b6040516100ba9190610827565b60405180910390f35b3480156100cf57600080fd5b506100d86103a8565b005b3480156100e657600080fd5b5061010160048036038101906100fc91906108a5565b6105ea565b60405161010e9190610827565b60405180910390f35b34801561012357600080fd5b5061012c610602565b6040516101399190610827565b60405180910390f35b34801561014e57600080fd5b5061015761060f565b6040516101649190610931565b60405180910390f35b6101756101df565b005b34801561018357600080fd5b5061018c610635565b604051610199919061095b565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c491906109a2565b61065b565b6040516101d6919061095b565b60405180910390f35b6802b5e3af16b188000061021e600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461069a90919063ffffffff16565b101561025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610a2c565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ad9190610a7b565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008073694aa1769357215de4fac081bf1f309adc32530690508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa15801561037e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a29190610ac4565b91505090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461042f576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104da5760006001828154811061045557610454610af1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104d290610b20565b915050610432565b50600067ffffffffffffffff8111156104f6576104f5610b68565b5b6040519080825280602002602001820160405280156105245781602001602082028036833780820191505090505b506001908051906020019061053a929190610767565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161056190610bc8565b60006040518083038185875af1925050503d806000811461059e576040519150601f19603f3d011682016040523d82523d6000602084013e6105a3565b606091505b50509050806105e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105de90610c29565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061066b57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106a6836106d6565b90506000670de0b6b3a764000085836106bf9190610c49565b6106c99190610cba565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610724573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107489190610d63565b5050509150506402540be4008161075f9190610dde565b915050919050565b8280548282559060005260206000209081019282156107e0579160200282015b828111156107df5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610787565b5b5090506107ed91906107f1565b5090565b5b8082111561080a5760008160009055506001016107f2565b5090565b6000819050919050565b6108218161080e565b82525050565b600060208201905061083c6000830184610818565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061087282610847565b9050919050565b61088281610867565b811461088d57600080fd5b50565b60008135905061089f81610879565b92915050565b6000602082840312156108bb576108ba610842565b5b60006108c984828501610890565b91505092915050565b6000819050919050565b60006108f76108f26108ed84610847565b6108d2565b610847565b9050919050565b6000610909826108dc565b9050919050565b600061091b826108fe565b9050919050565b61092b81610910565b82525050565b60006020820190506109466000830184610922565b92915050565b61095581610867565b82525050565b6000602082019050610970600083018461094c565b92915050565b61097f8161080e565b811461098a57600080fd5b50565b60008135905061099c81610976565b92915050565b6000602082840312156109b8576109b7610842565b5b60006109c68482850161098d565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a16601b836109cf565b9150610a21826109e0565b602082019050919050565b60006020820190508181036000830152610a4581610a09565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a868261080e565b9150610a918361080e565b9250828201905080821115610aa957610aa8610a4c565b5b92915050565b600081519050610abe81610976565b92915050565b600060208284031215610ada57610ad9610842565b5b6000610ae884828501610aaf565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b2b8261080e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610b5d57610b5c610a4c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610bb2600083610b97565b9150610bbd82610ba2565b600082019050919050565b6000610bd382610ba5565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c13600b836109cf565b9150610c1e82610bdd565b602082019050919050565b60006020820190508181036000830152610c4281610c06565b9050919050565b6000610c548261080e565b9150610c5f8361080e565b9250828202610c6d8161080e565b91508282048414831517610c8457610c83610a4c565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cc58261080e565b9150610cd08361080e565b925082610ce057610cdf610c8b565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d0a81610ceb565b8114610d1557600080fd5b50565b600081519050610d2781610d01565b92915050565b6000819050919050565b610d4081610d2d565b8114610d4b57600080fd5b50565b600081519050610d5d81610d37565b92915050565b600080600080600060a08688031215610d7f57610d7e610842565b5b6000610d8d88828901610d18565b9550506020610d9e88828901610d4e565b9450506040610daf88828901610aaf565b9350506060610dc088828901610aaf565b9250506080610dd188828901610d18565b9150509295509295909350565b6000610de982610d2d565b9150610df483610d2d565b9250828202610e0281610d2d565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610e3a57610e39610a4c565b5b8282058414831517610e4f57610e4e610a4c565b5b509291505056fea264697066735822122051ee747a916e827437b3c9ed39e7fd7fa6d0697984400f6c1123b9ecbc60c29864736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}